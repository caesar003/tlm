#!/bin/bash

config_dir="$HOME/.config/tlm"
config_file="$config_dir/setting.conf"
layout_dir="$config_dir/layouts"
default_layout=""
version="1.0.4"

print_version() {
	echo "Tmux Layout Manager version $version"
}

show_help() {
	echo "Usage: $0 [OPTIONS]"
	echo ""
	echo "Options:"
	echo "  -i, --init [layout_name] [session_name]    Load the specified Tmux layout with optional session name."
	echo "  -l, --list                                  List available layouts."
	echo "  -v, --version                               Show the version number."
	echo "  -h, --help                                  Display this help message."
	echo ""
	echo "Examples:"
	echo "  $0 -i node                          Load the 'node.json' layout with auto-generated session name."
	echo "  $0 -i node myproject                Load the 'node.json' layout with session name 'myproject_timestamp'."
	echo "  $0 -l                               List all available layouts."
	echo "  $0 -v                               Show the version number."
	echo ""
	echo "Session Naming:"
	echo "  - If no session name is provided, the current directory name will be used."
	echo "  - For '/home/caesar/projects/wms/OrderService-Frontend', session becomes 'OrderService-Frontend_timestamp'."
	echo "  - If a custom session name is provided, it becomes 'custom_name_timestamp'."
	echo ""
	echo "For configuration details, ensure your config file is located at:"
	echo "  $config_file"
}

load_layout() {
	layout_name="$1"
	custom_session_name="$2" # Optional custom session name
	layout_file="$layout_dir/$layout_name.json"

	if [[ ! -f "$layout_file" ]]; then
		echo "Error: Layout file '$layout_file' does not exist."
		exit 1
	fi

	if ! validate_layout_file "$layout_file"; then
		echo "Error: Layout file '$layout_file' is invalid."
		exit 1
	fi

	load_file "$layout_file" "$custom_session_name"
}

validate_layout_file() {
	layout_file="$1"
	if jq empty "$layout_file" 2>/dev/null; then
		return 0
	else
		return 1
	fi
}

load_file() {
	layout_file="$1"
	custom_session_name="$2" # Optional parameter for custom session name

	if [[ -n "$custom_session_name" ]]; then
		# Use provided custom name with timestamp
		session_name="${custom_session_name}_$(date +%s)"
	else
		# Extract directory name from current working directory
		current_dir=$(basename "$PWD")
		# Clean the directory name (remove special characters, replace with underscores)
		clean_dir_name=$(echo "$current_dir" | sed 's/[^a-zA-Z0-9_-]/_/g')
		session_name="${clean_dir_name}_$(date +%s)"
	fi

	first_window_title=$(jq -r '.[0].title' "$layout_file")
	tmux new-session -d -s "$session_name" -n "$first_window_title"

	num_windows=$(jq '. | length' "$layout_file")
	for ((i = 1; i < num_windows; i++)); do
		window_title=$(jq -r ".[$i].title" "$layout_file")
		tmux new-window -a -t "$session_name:" -n "$window_title"

		window_split=$(jq -r ".[$i].window_split // empty" "$layout_file")
		if [[ -n "$window_split" && "$window_split" -gt 1 ]]; then
			for ((j = 1; j < window_split; j++)); do
				tmux split-window -h -t "$session_name:$(($i + 1))"
				tmux select-layout -t "$session_name:$(($i + 1))" tiled
			done
		fi
	done

	echo "Created tmux session: $session_name"
	tmux attach -t "$session_name"
}

list_layouts() {
	if compgen -G "$layout_dir/*.json" >/dev/null; then
		echo "Available layouts:"
		for layout_file in "$layout_dir"/*.json; do
			layout_name=$(basename "$layout_file" .json)
			echo "  - $layout_name"
		done
	else
		echo "No layouts found in $layout_dir."
	fi
}

load() {
	layout_name="$1"
	custom_session_name="$2" # Optional custom session name

	if [[ -n "$layout_name" ]]; then
		load_layout "$layout_name" "$custom_session_name"
	else
		if [[ ! -f "$config_file" ]]; then
			echo "Error: Config file '$config_file' does not exist."
			exit 1
		fi

		default_layout=$(grep -E "^DEFAULT_LAYOUT=" "$config_file" | cut -d '=' -f2)
		if [[ -z "$default_layout" ]]; then
			echo "Error: DEFAULT_LAYOUT not defined in config file."
			exit 1
		fi

		load_layout "$default_layout" "$custom_session_name"
	fi
}

if [[ "$#" -eq 0 ]]; then
	show_help
	exit 0
fi

layout_name=""
while [[ "$#" -gt 0 ]]; do
	case "$1" in
	-i | --init)
		layout_name="$2"
		custom_session_name="$3" # Third argument for session name
		shift
		if [[ "$layout_name" == -* ]]; then
			layout_name=""
		else
			shift
			# Check if next argument is a session name (not a flag)
			if [[ -n "$1" && "$1" != -* ]]; then
				custom_session_name="$1"
				shift
			fi
		fi
		load "$layout_name" "$custom_session_name"
		exit 0
		;;
	-l | --list)
		list_layouts
		exit 0
		;;
	-v | --version)
		print_version
		exit 0
		;;
	-h | --help)
		show_help
		exit 0
		;;
	*)
		echo "Unknown option: $1"
		show_help
		exit 1
		;;
	esac
done
